{"ast":null,"code":"var _jsxFileName = \"/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  class: \"post bg-white p-1 my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: \"profile.html\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  class: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, name))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  class: \"my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}, text), /*#__PURE__*/React.createElement(\"p\", {\n  class: \"post-date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 19\n  }\n}, date), ' '), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  class: \"fas fa-thumbs-up\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}, likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  class: \"fas fa-thumbs-down\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Link, {\n  to: `/post/${_id}`,\n  class: \"btn btn-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}, \"Discussion\", ' ', comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  class: \"comment-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }\n}, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  class: \"fas fa-times\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 11\n  }\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(PostItem);","map":{"version":3,"sources":["/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","length","loading","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\n\nconst PostItem = ({\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n}) => (\n  <div class='post bg-white p-1 my-1'>\n    <div>\n      <a href='profile.html'>\n        <img class='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </a>\n    </div>\n    <div>\n      <p class='my-1'>{text}</p>\n      <p class='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>{' '}\n      </p>\n      <button type='button' class='btn btn-light'>\n        <i class='fas fa-thumbs-up'></i>\n        <span>{likes.length}</span>\n      </button>\n      <button type='button' class='btn btn-light'>\n        <i class='fas fa-thumbs-down'></i>\n      </button>\n      <Link to={`/post/${_id}`} class='btn btn-primary'>\n        Discussion{' '}\n        {comments.length > 0 && (\n          <span class='comment-count'>{comments.length}</span>\n        )}\n      </Link>\n      {!auth.loading && user === auth.user._id && (\n        <button type='button' class='btn btn-danger'>\n          <i class='fas fa-times'></i>\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(PostItem);\n"]},"metadata":{},"sourceType":"module"}