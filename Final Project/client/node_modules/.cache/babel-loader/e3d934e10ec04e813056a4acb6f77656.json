{"ast":null,"code":"var _jsxFileName = \"/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/dashboard/Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner'; //props 里有从state里map进来的 auth, profile，还有我们要用的action: getCurrentProfile\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []); //为了 as soon as Dashboard page loaded, 马上就call getCurrentProfile。所以用useEffect\n  //之所以加一个[]是为了只call 一次 useEffect，否则会无限call\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, \"Dashboard\");\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  // deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","PropTypes","connect","getCurrentProfile","Spinner","Dashboard","auth","profile","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,MAAMC,SAAS,GAAG,CAAC;AAAEF,EAAAA,iBAAF;AAAqBG,EAAAA,IAArB;AAA2BC,EAAAA;AAA3B,CAAD,KAA0C;AAC1DP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT,CAD0D,CAK1D;AACA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,CATD;;AAWAE,SAAS,CAACG,SAAV,GAAsB;AACpBL,EAAAA,iBAAiB,EAAEF,SAAS,CAACQ,IAAV,CAAeC,UADd;AAEpB;AACAJ,EAAAA,IAAI,EAAEL,SAAS,CAACU,MAAV,CAAiBD,UAHH;AAIpBH,EAAAA,OAAO,EAAEN,SAAS,CAACU,MAAV,CAAiBD;AAJN,CAAtB;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,IAAI,EAAEO,KAAK,CAACP,IADsB;AAElCC,EAAAA,OAAO,EAAEM,KAAK,CAACN;AAFmB,CAAZ,CAAxB;;AAKA,eAAeL,OAAO,CAACU,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,SAAhD,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n//props 里有从state里map进来的 auth, profile，还有我们要用的action: getCurrentProfile\nconst Dashboard = ({ getCurrentProfile, auth, profile }) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  //为了 as soon as Dashboard page loaded, 马上就call getCurrentProfile。所以用useEffect\n  //之所以加一个[]是为了只call 一次 useEffect，否则会无限call\n\n  return <div>Dashboard</div>;\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  // deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}