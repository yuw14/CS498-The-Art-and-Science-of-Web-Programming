{"ast":null,"code":"var _jsxFileName = \"/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/post/Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Back to Posts\"), /*#__PURE__*/React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CommentForm, {\n    postId: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getPost","PostItem","CommentForm","Post","post","loading","match","params","id","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEH,EAAAA,OAAF;AAAWI,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAC5DX,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACR,OAAD,CAFM,CAAT;AAIA,SAAOK,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAHF;AAWD,CAhBD;;AAkBAN,IAAI,CAACO,SAAL,GAAiB;AACfV,EAAAA,OAAO,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADT;AAEfR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADsB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAsCG,IAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Back to Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n"]},"metadata":{},"sourceType":"module"}