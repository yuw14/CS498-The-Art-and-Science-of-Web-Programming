{"ast":null,"code":"var _jsxFileName = \"/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  addLike,\n  removeLike,\n  deletePost\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  class: \"post bg-white p-1 my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: `/profile/${user}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  class: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, name))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  class: \"my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}, text), /*#__PURE__*/React.createElement(\"p\", {\n  class: \"post-date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 19\n  }\n}, date), ' '), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => addLike(_id),\n  type: \"button\",\n  class: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  class: \"fas fa-thumbs-up \",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}), ' ', /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n}, \" \", likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 37\n  }\n}, likes.length))), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => removeLike(_id),\n  type: \"button\",\n  class: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  class: \"fas fa-thumbs-down\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Link, {\n  to: `/post/${_id}`,\n  class: \"btn btn-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, \"Discussion\", ' ', comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  class: \"comment-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }\n}, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => deletePost(_id),\n  type: \"button\",\n  class: \"btn btn-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  class: \"fas fa-times\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","e","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  addLike,\n  removeLike,\n  deletePost,\n}) => (\n  <div class='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img class='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p class='my-1'>{text}</p>\n      <p class='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>{' '}\n      </p>\n      <button onClick={(e) => addLike(_id)} type='button' class='btn btn-light'>\n        <i class='fas fa-thumbs-up ' />{' '}\n        <span> {likes.length > 0 && <span>{likes.length}</span>}</span>\n      </button>\n      <button\n        onClick={(e) => removeLike(_id)}\n        type='button'\n        class='btn btn-light'\n      >\n        <i class='fas fa-thumbs-down'></i>\n      </button>\n      <Link to={`/post/${_id}`} class='btn btn-primary'>\n        Discussion{' '}\n        {comments.length > 0 && (\n          <span class='comment-count'>{comments.length}</span>\n        )}\n      </Link>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={(e) => deletePost(_id)}\n          type='button'\n          class='btn btn-danger'\n        >\n          <i class='fas fa-times'></i>\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}