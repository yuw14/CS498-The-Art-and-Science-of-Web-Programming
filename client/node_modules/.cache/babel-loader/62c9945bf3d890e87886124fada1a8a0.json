{"ast":null,"code":"var _jsxFileName = \"/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  //如果logged in， 可以edit\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Back to Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Edit Profile\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth //如果logged in， 可以edit\n\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/wangyu/Documents/MERN_Project/yuw14_devconnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfD,EAAAA,cADe;AAEfE,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFM;AAGfC,EAAAA,IAHe;AAGT;AACNC,EAAAA;AAJe,CAAD,KAKV;AACJV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACP,cAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIGC,IAAI,CAACI,eAAL,IACCJ,IAAI,CAACD,OAAL,KAAiB,KADlB,IAECC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAFhC,iBAGG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPN,CAJJ,CADF;AAoBD,CA9BD;;AAgCAT,OAAO,CAACU,SAAR,GAAoB;AAClBX,EAAAA,cAAc,EAAEJ,SAAS,CAACgB,IAAV,CAAeC,UADb;AAElBX,EAAAA,OAAO,EAAEN,SAAS,CAACkB,MAAV,CAAiBD,UAFR;AAGlBT,EAAAA,IAAI,EAAER,SAAS,CAACkB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,OAAO,EAAEc,KAAK,CAACd,OADmB;AAElCE,EAAAA,IAAI,EAAEY,KAAK,CAACZ,IAFsB,CAEhB;;AAFgB,CAAZ,CAAxB;;AAKA,eAAeN,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth, //如果logged in， 可以edit\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back to Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth, //如果logged in， 可以edit\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}